<!-- Edited but not saved modal -->
<div class="modal fade" id="confirm_back_modal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog modal-sm">
		<div class="modal-content">
			<div class="modal-header">
				<%= t('modal.title.back') %>
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">
					&times;
				</button>
			</div>
			<div class="modal-body">
				<%= t('modal.body.back') %>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" data-dismiss="modal">
					<%= t('helpers.action.cancel') %>
				</button>

				<a class="btn btn-primary" id="modal_back_btn"><%= t('helpers.action.discard') %></a>
				<a class="btn btn-primary" id="modal_confirm_btn"><%= t('helpers.action.update_data') %></a>
			</div>
		</div>
	</div>
</div>

<%= render 'shared/audit_commons' %>

<script>
	<% if @model.persisted? %>
		$(document).ready(function() {

			function button(elem) {
				return elem.hasClass('btn');
			}

			function temp_field(elem) {
				return elem.hasClass('temp_field');
			}

			function hidden_field(elem) {
				return elem.attr('type') !== 'hidden';
			}

			function status_attr(elem) {
				return elem.attr('id') === 'model_status';
			}

			function has_id(elem) {
				return typeof elem.attr('id') !== 'undefined';
			}


			// Saves the values of the model on page load, so it can be compared to the values when the user goes back, allowing a 'not-saved data' pop-up to display;
			window.attr_values = new Array();
			$('input, textarea, select').each(function(){
				elem = $(this);
				if(!button(elem) && has_id(elem) && !temp_field(elem) && (status_attr(elem) || hidden_field(elem)))
					attr_values[$(this).attr('id')] = $(this).val();
			})

			$('#form_back_btn').on('click', handle_back_on_edit);
		});

		function has_changed(key) {
			if($('#' + key).hasClass("numbers_only") && attr_values[key] === "" && $('#' + key).val() === "0")
				return false;


			return attr_values[key] != $('#' + key).val();
		}

		function handle_back_on_edit() {

			window.any_change = false;

			preprocess_data();

			var changed_values_list = "";

			if(!window.any_change) {
				for (var key in attr_values) {
					if(has_changed(key)) {
						changed_values_list += ' ' + key;
						any_change = true;
					}
				}
			}

			if(window.any_change) {
				$('#confirm_back_modal').modal('show');
				$('#modal_back_btn').on('click', function() {
					go_back();
				});
			} else {
				go_back();
			}
		}

	<% else %>

		$(document).ready(function() {
			$('.back_btn').on('click', function() {
				go_back();
			});
		});

	<% end %>

	$('#modal_confirm_btn').on('click', function() {
		document.getElementById("main_form").submit();
	});

	function display_form_errors(message) {
		var result = '';

		if (Object.prototype.toString.call(message) === '[object Array]') {
			result = msg_as_html_ul(message);
		} else {
			result = message;
		}

		hide_all_messages();
		to_top();
		$('#form_error_messages').html(result);
		$('#form_error_box').show();
	}

	function add_tag_to_field(field, tag) {
		var caretPos = document.getElementById(field).selectionStart;
		var textAreaTxt = jQuery("#" + field).val();
		jQuery("#" + field).val(textAreaTxt.substring(0, caretPos) + ' ' + tag + ' ' + textAreaTxt.substring(caretPos) );
	}

	function go_back() {
		window.location = '<%= model_full_path(@model) %>';
	}

</script>
