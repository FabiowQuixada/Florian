<div class="row">
	<div class="container-fluid">
		<div class="panel panel-default">
			<div id="contact_panel_header" class="panel-heading"><%= t('helpers.maintainer.new_contact') %></div>
			<div class="panel-body">

				<%= render 'shared/error_alert', id: 'contact' %>

				<div class="row">
					<div class="form-group col-md-12">
						<div id="contact_data">
							<%= render 'contacts/contact_form' %>
						</div>
					</div>
				</div>

				<div class="row">
					<div class="col-md-12 right">
						<a href="javascript:void(0)" id="add_contact_btn" class="btn btn-primary btn-xs add_btn"><%= t('helpers.action.add') %></a>
						<a href="javascript:void(0)" id="cancel_contact_edition_btn" class="btn btn-primary btn-xs add_btn hidden"><%= t('helpers.action.cancel') %></a>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-md-12">

		<table id="contacts_table" class="table table-striped table-condensed table-bordered unbreakable-table">
			<thead>
				<tr class="hidden-xs">
					<% I18n.with_options(scope: 'activerecord.attributes.contact') do |i18n| %>
						<th class="id-column admin-only"></th>
						<th><%= i18n.t :name %></th>
						<th><%= i18n.t :position %></th>
						<th class="hidden"></th>
						<th><%= i18n.t :telephone %></th>
						<th><%= i18n.t :celphone %></th>
						<th class="hidden"></th>
						<th class="icon-column-2"></th>
						<th class="icon-column-2"></th>
						<th class="hidden"></th>
					<% end %>
				</tr>
			</thead>
			<tbody>
				<%= no_records_row Contact.new, @model.contacts, 6 %>
				<%= render @model.contacts %>
			</tbody>
		</table>
	</div>
</div>

<%= f.hidden_field 'contacts_to_be_deleted' %>

<script>

	// Temporary contacts have negative id;
	let transient_contacts = 0;
	let contact_temp_id = -1;
	let loaded_contact_id = null;

	$(() => {

		$('#add_contact_btn').on('click', () => {

			if(validate_contact()) {
				transient_contacts += 1;

				const name = $('#temp_contact_name').val();
				const position = $('#temp_contact_position').val();
				const email = $('#temp_contact_email_address').val();
				const telephone = $('#temp_contact_telephone').val();
				const celphone = $('#temp_contact_celphone').val();
				const fax = $('#temp_contact_fax').val();

				if(loaded_contact_id) {

					// View;
					$(`#contact_${loaded_contact_id} .contact_name`).text(name);
					$(`#contact_${loaded_contact_id} .contact_position`).text(position);
					$(`#contact_${loaded_contact_id} .contact_email_address`).text(email);
					$(`#contact_${loaded_contact_id} .contact_telephone`).text(telephone);
					$(`#contact_${loaded_contact_id} .contact_celphone`).text(celphone);
					$(`#contact_${loaded_contact_id} .contact_fax`).text(fax);

					// Params;
					$(`#maintainer_contacts_attributes_${loaded_contact_id}_name`).val(name);
					$(`#maintainer_contacts_attributes_${loaded_contact_id}_position`).val(position);
					$(`#maintainer_contacts_attributes_${loaded_contact_id}_email_address`).val(email);
					$(`#maintainer_contacts_attributes_${loaded_contact_id}_telephone`).val(telephone);
					$(`#maintainer_contacts_attributes_${loaded_contact_id}_celphone`).val(celphone);
					$(`#maintainer_contacts_attributes_${loaded_contact_id}_fax`).val(fax);

				} else {
					$.ajax({
						url: '<%= url_for(action: 'contact_row', controller: 'maintainers', only_path: false, protocol: 'http') %>', 
						data: {
							contact: {
								id: contact_temp_id, 
								name: name, 
								position: position, 
								email_address: email, 
								telephone: telephone, 
								celphone: celphone, 
								fax: fax
							}
						},
						success: result => $('#contacts_table > tbody:last-child').append(result)
					});

					contact_temp_id -= 1;
				}

				clean_contact_fields();
				$('#no_contacts_row').addClass('hidden');
			}
		});

		const validate_contact = () => {
			const errors = new Array();
			const email = $('#temp_contact_email_address').val();

			if(!at_least_one_field_filled()) {
				errors.push('<%= I18n.t('errors.contact.all_empty') %>');
			}

			if(email && !validate_email(email)) {
				errors.push('<%= I18n.t('alert.email.invalid_recipient') %>');
			}

			display_error(errors, 'contact');

			return errors.length === 0;
		}

		const at_least_one_field_filled = () => {
			let is_valid = false;

			$("#contact_data input").each( (index, field) => {
				if ($(field).val() !== "") {
					is_valid = true;
					return;
				}
			});

			return is_valid;
		}

		const load_contact = id => {

			loaded_contact_id = id;
			$('#cancel_contact_edition_btn').removeClass('hidden');
			$('#add_contact_btn').text('<%= t('helpers.action.update') %>');
			$('#contact_panel_header').text('<%= t('helpers.maintainer.edit_contact') %>');

			$('#temp_contact_name').val($(`#contact_${id} .contact_name`).text());
			$('#temp_contact_position').val($(`#contact_${id} .contact_position`).text());
			$('#temp_contact_email_address').val($(`#contact_${id} .contact_email_address`).text());
			$('#temp_contact_telephone').val($(`#contact_${id} .contact_telephone`).text());
			$('#temp_contact_celphone').val($(`#contact_${id} .contact_celphone`).text());
			$('#temp_contact_fax').val($(`#contact_${id} .contact_fax`).text());
		}

		const clean_contact_fields = () => {
			$('#temp_contact_name').val('');
			$('#temp_contact_position').val('');
			$('#temp_contact_email_address').val('');
			$('#temp_contact_telephone').val('');
			$('#temp_contact_celphone').val('');
			$('#temp_contact_fax').val('');

			loaded_contact_id = null;
			$('#cancel_contact_edition_btn').addClass('hidden');
			$('#add_contact_btn').text('<%= t('helpers.action.add') %>');
			$('#contact_panel_header').text('<%= t('helpers.maintainer.new_contact') %>');

			hide_errors_from_box('contact');
		}

		$('body').on('click', '.remove_contact_btn', e => {
			const elem = $(e.currentTarget);
			const id = elem.closest('.contact_row').find('.contact_id').text();

	        $(`#contact_${id}`).remove();

			transient_contacts -= 1;

			if(document.getElementById("contacts_table").rows.length == 2)
				$('#no_contacts_row').removeClass('hidden');

			if(id > 0) {
				$('#maintainer_contacts_to_be_deleted').val(`${$('#maintainer_contacts_to_be_deleted').val()}${id},`);
			}

			clean_contact_fields();
		});

		$('body').on('click', '.edit_contact_btn', e => {
			const elem = $(e.currentTarget);
			load_contact(elem.closest('.contact_row').find('.contact_id').text())
		});

		$('#cancel_contact_edition_btn').on('click', clean_contact_fields);

	});
</script>
