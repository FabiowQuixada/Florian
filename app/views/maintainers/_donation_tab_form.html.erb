<div class="row">
	<div class="form-group col-md-12">
		<div class="row">
			<div class="form-group col-md-6">
				<%= f.label :first_parcel %>
				<div class="input-group date" data-behaviour='datepicker' >
					<%= date_field f, :first_parcel %><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
				</div>
			</div>
			<div class="form-group col-md-6">
				<%= label_tag 'maintainer_last_parcel', t('activerecord.attributes.maintainer.last_parcel') %>
				<%= text_field_tag :last_parcel, '', { id: 'maintainer_last_parcel', class: 'form-control', readonly: true } %>
			</div>
		</div>
		<div class="row">
			<div class="form-group col-md-4">
				<%= f.label :payment_frequency %>
				<%= f.select :payment_frequency, Maintainer.i18n_payment_frequencies { |e| [e.key, e.value] }, { include_blank: t('helpers.select.prompt') }, { class: 'form-control' } %>
			</div>
			<div class="form-group col-md-4">
				<%= f.label :payment_period %>
				<%= f.text_field :payment_period, class: 'form-control numbers_only' %>
			</div>
			<div class="form-group col-md-4">
				<%= f.label :contract %>
				<%= f.select :contract, Maintainer.i18n_contracts { |e| [e.key, e.value] }, { include_blank: t('helpers.select.prompt') }, { class: 'form-control' } %>
			</div>
		</div>
		<div class="row">
			<div class="container-fluid">
				<div class="panel panel-default">
					<div class="panel-heading"><%= t('helpers.maintainer.new_donation') %></div>
					<div class="panel-body">

						<%= render 'shared/error_alert', id: 'donation' %>

						<div class="row">
							<div class="form-group col-md-4">
								<div class="input-group date" data-behaviour='datepicker' >
									<%= text_field_tag :donation_date, '', id: 'new_donation_date', class: 'form-control datepicker temp_field' %><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
								</div>
							</div>
							<div class="form-group col-md-3">
								<div class="input-group">
									<span class="input-group-addon"><%= currency %></span>
									<%= text_field_tag :value, '', id: 'new_donation_value', class: 'form-control money temp_field' %>
								</div>
							</div>
							<div class="form-group col-md-5">
								<%= text_field_tag :remark, '', id: 'new_donation_remark', placeholder: t('activerecord.attributes.donation.remark'), class: 'form-control temp_field' %>
							</div>
						</div>

						<div class="row">
							<div class="col-md-12 right">
								<a id="add_donation_btn" class="btn btn-primary btn-xs add_btn"><%= t('helpers.action.add') %></a>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				<table id="donations_table" class="table table-striped table-condensed table-bordered unbreakable-table">
					<thead class="hidden-xs">
						<tr>
							<% I18n.with_options(scope: 'activerecord.attributes.donation') do |i18n| %>
								<th class="admin-only id-column hidden"></th>
								<th><%= i18n.t :date %></th>
								<th><%= i18n.t :value %></th>
								<th class="hidden-xs column-lg"><%= i18n.t :remark %></th>
								<th class="icon-column-2"></th>
							<% end %>
						</tr>
					</thead>
					<tbody>
						<%= no_records_row Donation.new, @model.donations, 4 %>
						<%= render @model.donations %>
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>

<%= f.hidden_field 'donations_to_be_deleted' %>

<script>

	// Temporary donations have negative id;
	let transient_donations = 0;
	let temp_donation_id = -1;

	const new_donations = () => transient_donations > 0

	const toogle_parcel_qty_field = () => {
		if(cant_set_parcels()) {
			$('#maintainer_payment_period').prop('readonly', true);
			$('#maintainer_payment_period').val('');
		} else {
			$('#maintainer_payment_period').prop('readonly', false);
		}
	}

	const cant_set_parcels = () => {
		const frequency = $('#maintainer_payment_frequency').val();

		return !frequency || frequency === '' || frequency === "<%= Maintainer.payment_frequencies.keys[0] %>" || frequency === "<%= Maintainer.payment_frequencies.keys[7] %>";
	}

	const set_last_parcel_date = () => {
		const first_date = $('#maintainer_first_parcel').val();
		const frequency = $('#maintainer_payment_frequency').val();
		const parcel_qty = $('#maintainer_payment_period').val();
		const last_date = $('#maintainer_last_parcel');

		if(!first_date || cant_set_parcels() || !parcel_qty) {
			last_date.val('');
			return;
		}

		let frequency_type;
		let temp = parcel_qty;

		if(frequency == "<%= Maintainer.payment_frequencies.keys[1] %>") {
			frequency_type = 'days';
		} else if(frequency == "<%= Maintainer.payment_frequencies.keys[2] %>") {
			frequency_type = 'weeks';
		} else if(frequency == "<%= Maintainer.payment_frequencies.keys[3] %>") {
			frequency_type = 'months';
		} else if(frequency == "<%= Maintainer.payment_frequencies.keys[4] %>") {
			temp = 3;
			frequency_type = 'months';
		} else if(frequency == "<%= Maintainer.payment_frequencies.keys[5] %>") {
			temp = 6;
			frequency_type = 'months';
		} else if(frequency == "<%= Maintainer.payment_frequencies.keys[6] %>") {
			frequency_type = 'years';
		}

		if(parcel_qty != 0 || (frequency_type !== undefined && frequency_type !== '')) {
			last_date.val(moment(first_date, "<%= I18n.t('date.formats.javascript_format.date').upcase %>").add((temp-1), frequency_type).format("<%= I18n.t('date.formats.javascript_format.date').upcase %>"));
		} else {
			last_date.val('');
		}
	}

	const validate_donation = () => {
		const errors = new Array();

		if(!$('#new_donation_date').val()) {
			errors.push('<%= Donation.new.blank_error_message('date') %>');
		}

		if((!$('#new_donation_value').val() || $('#new_donation_value').val() == to_money(0)) && !$('#new_donation_remark').val()) {
			errors.push(I18n.t('errors.donation.value_or_remark'));
		}

		if(errors.length > 0) {
			display_error(errors, 'donation');
		}

		return errors.length == 0;
	}

	const clean_donation_fields = () => {
		$('#new_donation_date').val('');
		$('#new_donation_value').val(to_money(0));
		$('#new_donation_remark').val('');

		hide_errors_from_box('donation');
	}

	$(() => {
		toogle_parcel_qty_field();
		set_last_parcel_date();

	    $('#maintainer_entity_type').on('change', update_fields_by_entity_type);
		$('#maintainer_first_parcel').on('change', set_last_parcel_date);
		$('#maintainer_payment_period').on('change', set_last_parcel_date);
		$('#maintainer_payment_frequency').on('change', set_last_parcel_date);
		$('#maintainer_payment_frequency').change(toogle_parcel_qty_field);
		$('body').on('click', '#new_donation_btn', set_datepicker);

		$('#add_donation_btn').on('click', () => {
			if(validate_donation()) {
				transient_donations += 1;

				const date = $('#new_donation_date').val();
				const value = $('#new_donation_value').val();
				const remark = $('#new_donation_remark').val();

				$.ajax({
					url: '<%= url_for(action: 'donation_row', controller: 'maintainers', only_path: false, protocol: 'http') %>', 
					data: {
						donation: {
							id: temp_donation_id, 
							donation_date: date, 
							value: value, 
							remark: remark
						}
					},
					success: result => $('#donations_table > tbody:last-child').append(result)
				});

				temp_donation_id -= 1;
				clean_donation_fields();
				$('#no_donations_row').addClass('hidden');
			}
		});

		$('body').on('click', '.remove_donation_btn', e => {
			const elem = $(e.currentTarget);
			const id = elem.closest('.donation_row').find('.donation_id').text();

         	$(`#donation_${id}_row`).remove();

			transient_donations -= 1;

			if(document.getElementById("donations_table").rows.length == 2) {
				$('#no_donations_row').removeClass('hidden');
			}

			if(id > 0) {
				$('#maintainer_donations_to_be_deleted').val(`${$('#maintainer_donations_to_be_deleted').val()}${id},`);
			}
		});
	})

</script>