<!-- Edited but not saved modal -->
<div class="modal fade" id="confirm_back_modal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog modal-sm">
		<div class="modal-content">
			<div class="modal-header">
				<%= t('modal.title.back') %>
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">
					&times;
				</button>
			</div>
			<div class="modal-body">
				<%= t('modal.body.back') %>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" data-dismiss="modal">
					<%= t('helpers.action.cancel') %>
				</button>

				<a class="btn btn-primary" id="modal_back_btn"><%= t('helpers.action.discard') %></a>
				<a class="btn btn-primary" id="modal_confirm_btn"><%= t('helpers.action.update_data') %></a>
			</div>
		</div>
	</div>
</div>

<%= render partial: "helpers/audit_helper", locals: {model: model} %>

<script>
	<% if !model.new_record? %>
		$(document).ready(function() {

			jQuery(document).ready(function($) {

				$("#remove_company_form").on("ajax:success", function(e, data, status, xhr) {
					display_notice('<%= t('alert.email.test_sent') %>');
					$('#remove_company_modal').modal('hide');

				}).on("ajax:error", function(e, xhr, status, error) {
					display_error('<%= t('alert.email.error_sending_test') %>');
					$('#remove_company_modal').modal('hide');
				});
			});


			window.attr_values = new Array();
			$('input, textarea, select').each(function(){
				if(!$(this).hasClass('btn') && !(typeof $(this).attr('id') === 'undefined') && !$(this).hasClass('temp_field'))
			   		attr_values[$(this).attr('id')] = $(this).val();
			})

			$('#form_back_btn').on('click', function(){

				window.any_change = false;

				preprocess_data();

				var changed_values_list = "";

				if(!window.any_change) {
					for (var key in attr_values) {
					    if(attr_values[key] != $('#' + key).val()) {
					    	changed_values_list += ' ' + key;
					    	any_change = true;
					    }
					}
				}

				//alert(changed_values_list);

				if(window.any_change) {
					edited_but_not_saved('/<%= model.model_name.route_key %>');
				} else {
					parent.history.back();
				}

			})

			<% if model.class.column_names.include? 'active' %>
				if(<%= model.active? %>)
					activate();
				else
					inactivate();
			<% end %>

			function edited_but_not_saved(url)
			{
				$('#confirm_back_modal').modal('show');
				$('#modal_back_btn').on('click', function()
				{
					window.location = url;
				});
			}

		//   if (window.history && window.history.pushState) {

		//     window.history.pushState('forward', null, './#forward');

		//     $(window).on('popstate', function() {
		//       alert('Back button was pressed.');
		//     });

		//   }

		});

	<% else %>

		$(document).ready(function() {
			<% if model.class.column_names.include? 'active' %>
				activate();
			<% end %>

			$('.back_btn').on('click', function()
			{
				parent.history.back();
			});
		});

	<% end %>

	$('#modal_confirm_btn').on('click', function() {
		document.getElementById("main_form").submit();
	});

	function display_form_errors(message) {
		var result = '';

		if (Object.prototype.toString.call(message) === '[object Array]')
		{
			result += '<ul>';

			for (var i = 0; i < message.length; i++)
				result += '<li>' + message[i] + '</li>';

			result += '</ul>';
		} else {
			result = message;
		}

		hide_all_messages();
		to_top();
		$('#form_error_messages').html(result);
		$('#form_error_box').show();
	}

	<% if model.class.column_names.include? 'active' %>

		function inactivate()
		{
			$('#active_img').hide();
			$('#inactive_img').show();
			$('#model_status').val('false');
			$('#status_description').text('<%= genderize_tag(model, 'helpers.is_inactive') %>');
		}

		function activate()
		{
			$('#active_img').show();
			$('#inactive_img').hide();
			$('#model_status').val('true');
			$('#status_description').text('<%= genderize_tag(model, 'helpers.is_active') %>');
		}

		$('.status_btn').on('click', set_status_btn);

		function set_status_btn()
		{
			if($('#model_status').val() == 'true')
				inactivate();
			else
				activate();
		}

	<% end %>

	var entityMap = {
		"&": "&amp;",
		"<": "&lt;",
		">": "&gt;",
		'"': '&quot;',
		"'": '&#39;',
		"/": '/' // &#x2F;
	};

	function escapeHtml(string) {
		return String(string).replace(/[&<>"'\/]/g, function (s) {
			return entityMap[s];
	});
	}

        function add_tag_to_field(field, tag) {
            var caretPos = document.getElementById(field).selectionStart;
            var textAreaTxt = jQuery("#" + field).val();
            jQuery("#" + field).val(textAreaTxt.substring(0, caretPos) + ' ' + tag + ' ' + textAreaTxt.substring(caretPos) );
         }



</script>